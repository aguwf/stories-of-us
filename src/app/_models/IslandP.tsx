"use client";

/**
 * IMPORTANT: Loading glTF models into a Three.js scene is a lot of work.
 * Before we can configure or animate our model's meshes, we need to iterate through
 * each part of our model's meshes and save them separately.
 *
 * But luckily there is an app that turns gltf or glb files into jsx components
 * For this model, visit https://gltf.pmnd.rs/
 * And get the code. And then add the rest of the things.
 * YOU DON'T HAVE TO WRITE EVERYTHING FROM SCRATCH
 */

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: nimzu (https://sketchfab.com/nimzuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
Title: Fox's islands
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import type { Group } from 'three';

type IslandProps = {
    isRotating: boolean;
    setIsRotating: (isRotating: boolean) => void;
    [key: string]: any
}

export function Island({ isRotating, ...props }: IslandProps) {
    const { nodes, materials } = useGLTF('/assets/3d/island.glb');
    // biome-ignore lint/style/noNonNullAssertion: <explanation>
    const islandRef = useRef<Group>(null!);



    return (
        <group {...props} ref={islandRef} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface944_tree_body_0.geometry}
                material={materials.PaletteMaterial001}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface945_tree1_0.geometry}
                material={materials.PaletteMaterial001}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface946_tree2_0.geometry}
                material={materials.PaletteMaterial001}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface947_tree1_0.geometry}
                material={materials.PaletteMaterial001}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface948_tree_body_0.geometry}
                material={materials.PaletteMaterial001}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface949_tree_body_0.geometry}
                material={materials.PaletteMaterial001}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.pCube11_rocks1_0.geometry}
                material={materials.PaletteMaterial001}
            />
        </group>
    )
};